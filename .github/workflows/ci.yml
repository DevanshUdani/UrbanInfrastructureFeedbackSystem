name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build & Test (Node.js)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install root dependencies (if present)
        run: |
          if [ -f package.json ]; then
            npm ci || npm install
          fi

      - name: Run root tests (if script exists)
        run: |
          if [ -f package.json ]; then
            npm run -s test --if-present
          fi

      - name: Backend install & test (if server/ exists)
        run: |
          if [ -f server/package.json ]; then
            cd server
            npm ci || npm install
            npm run -s test --if-present
          fi

      - name: Frontend install & build (if client/ exists)
        run: |
          if [ -f client/package.json ]; then
            cd client
            npm ci || npm install
            npm run -s build --if-present
          fi

      - name: Upload production build artifact (client/build if exists)
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: |
            client/build
          if-no-files-found: ignore

  deploy:
    name: Deploy to AWS EC2 (on push to main)
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install rsync and SSH client
        run: sudo apt-get update && sudo apt-get install -y rsync openssh-client

      # - name: Start ssh-agent and add key
      #   uses: webfactory/ssh-agent@v0.9.0
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: Add remote host to known_hosts
      #   run: |
      #     mkdir -p ~/.ssh
      #     ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Rsync repository to server
        run: |
          rsync -az --delete             --exclude ".git"             --exclude "node_modules"             --exclude "client/node_modules"             --exclude "server/node_modules"             ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.APP_DIR }}/

      - name: Install server dependencies & restart services
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e
          cd "${APP_DIR}"
          # Load environment variables if you keep them in a .env file (already present on the server)
          if [ -f server/package.json ]; then
            cd server
            npm ci || npm install
            # Restart API with PM2 (ensure pm2 is installed and process is named 'api' or adjust accordingly)
            if pm2 list | grep -q "api"; then
              pm2 restart api
            else
              pm2 start npm --name "api" -- run start
            fi
            cd ..
          fi

          if [ -f client/package.json ]; then
            cd client
            npm ci || npm install
            npm run build --if-present
            cd ..
          fi
          EOF
        env:
          APP_DIR: ${{ secrets.APP_DIR }}
